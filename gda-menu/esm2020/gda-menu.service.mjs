import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
class DataForPosition {
    constructor(positionButton, typeButton, positionContainer, viewW, viewH) {
        this.positionButton = positionButton;
        this.typeButton = typeButton;
        this.positionContainer = positionContainer;
        this.viewW = viewW;
        this.viewH = viewH;
    }
}
export class GdaMenuService {
    constructor(rendererFactory) {
        this.rendererFactory = rendererFactory;
        this.menuClose = new Subject();
        this.onEnter = new Subject();
        this.renderer = this.rendererFactory.createRenderer(null, null);
    }
    resetContainerAndCreateData(container, el) {
        // RESET CONTAINER
        this.renderer.removeStyle(container, 'top');
        this.renderer.removeStyle(container, 'left');
        this.renderer.removeStyle(container, 'width');
        this.renderer.removeStyle(container, 'height');
        this.renderer.removeStyle(container, 'overflow');
        // DATA
        return {
            positionButton: el.nativeElement.getBoundingClientRect(),
            typeButton: el.nativeElement.classList.contains('gda-menu-item'),
            positionContainer: container.getBoundingClientRect(),
            viewW: window.innerWidth,
            viewH: window.innerHeight
        };
    }
    setDirection(direction, container, el) {
        if (direction === 'left')
            this.setDirectionLeft(container, el);
        if (direction === 'right')
            this.setDirectionRight(container, el);
        if (direction === 'bottom')
            this.setDirectionBottom(container, el);
        if (direction === 'top')
            this.setDirectionTop(container, el);
    }
    setDirectionLeft(container, el) {
        const data = this.resetContainerAndCreateData(container, el);
        this.renderer.setStyle(container, 'top', `${data.positionButton.top - 1}px`);
        if (data.viewW < (data.positionButton.right + data.positionContainer.width)) {
            this.renderer.setStyle(container, 'left', `${data.positionButton.left - data.positionContainer.width}px`);
        }
        else {
            this.renderer.setStyle(container, 'left', `${data.typeButton ? (data.positionButton.left - data.positionContainer.width) : (data.positionButton.right + 5)}px`);
        }
        if (data.viewH < (data.positionButton.top + data.positionContainer.height)) {
            this.renderer.setStyle(container, 'height', `${data.viewH - data.positionButton.top - 10}px`);
            this.renderer.setStyle(container, 'overflow', 'auto');
        }
    }
    setDirectionRight(container, el) {
        const data = this.resetContainerAndCreateData(container, el);
        this.renderer.setStyle(container, 'top', `${data.positionButton.top - 1}px`);
        if (data.viewW < (data.positionButton.right + data.positionContainer.width)) {
            this.renderer.setStyle(container, 'left', `${data.positionButton.left - data.positionContainer.width}px`);
        }
        else {
            this.renderer.setStyle(container, 'left', `${data.typeButton ? data.positionButton.right : (data.positionButton.right + 5)}px`);
        }
        if (data.viewH < (data.positionButton.top + data.positionContainer.height)) {
            this.renderer.setStyle(container, 'height', `${data.viewH - data.positionButton.top - 10}px`);
            this.renderer.setStyle(container, 'overflow', 'auto');
        }
    }
    setDirectionBottom(container, el) {
        const data = this.resetContainerAndCreateData(container, el);
        this.renderer.setStyle(container, 'top', `${data.positionButton.top + data.positionButton.height + 1}px`);
        if (data.viewW > (data.positionButton.left + data.positionContainer.width)) {
            this.renderer.setStyle(container, 'left', `${data.positionButton.left}px`);
        }
        else {
            this.renderer.setStyle(container, 'left', `${(data.positionButton.right - data.positionContainer.width)}px`);
        }
        if (data.viewH < (data.positionButton.top + data.positionButton.height + data.positionContainer.height)) {
            this.renderer.setStyle(container, 'height', `${data.viewH - data.positionButton.top - 10}px`);
            this.renderer.setStyle(container, 'top', `${data.positionButton.top - (data.viewH - data.positionButton.top - 10)}px`);
            this.renderer.setStyle(container, 'overflow', 'auto');
        }
    }
    setDirectionTop(container, el) {
        const data = this.resetContainerAndCreateData(container, el);
        this.renderer.setStyle(container, 'top', `${data.positionButton.top - data.positionContainer.height - 1}px`);
        if (data.viewW > (data.positionButton.left + data.positionContainer.width)) {
            this.renderer.setStyle(container, 'left', `${data.positionButton.left}px`);
        }
        else {
            this.renderer.setStyle(container, 'left', `${(data.positionButton.right - data.positionContainer.width)}px`);
        }
        if (data.positionContainer.height > data.positionButton.top) {
            this.renderer.setStyle(container, 'height', `${data.positionButton.top - 10}px`);
            this.renderer.setStyle(container, 'top', `${data.positionButton.top + data.positionButton.height + 1}px`);
            this.renderer.setStyle(container, 'overflow', 'auto');
        }
    }
}
GdaMenuService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: GdaMenuService, deps: [{ token: i0.RendererFactory2 }], target: i0.ɵɵFactoryTarget.Injectable });
GdaMenuService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: GdaMenuService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: GdaMenuService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i0.RendererFactory2 }]; } });
//# sourceMappingURL=data:application/json;base64,