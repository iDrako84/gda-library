{"version":3,"file":"gda-toast.mjs","sources":["../../../gda-library-dev/projects/gda-toast/src/gda-toast.component.ts","../../../gda-library-dev/projects/gda-toast/src/gda-toast.service.ts","../../../gda-library-dev/projects/gda-toast/src/gda-toast.module.ts","../../../gda-library-dev/projects/gda-toast/src/public-api.ts","../../../gda-library-dev/projects/gda-toast/src/gda-toast.ts"],"sourcesContent":["import { Component, ElementRef, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\nclass GdaToastConfig {\n  public direction: 'top-right' | 'top-center' | 'top-left' | 'bottom-right' | 'bottom-center' | 'bottom-left';\n  public classToast?: string;\n  public styleToast?: {};\n  public timing?: number | 'indeterminate';\n\n  constructor(\n    direction: 'top-right' | 'top-center' | 'top-left' | 'bottom-right' | 'bottom-center' | 'bottom-left' = 'top-right',\n    classToast: string = '',\n    styleToast: {} = {},\n    timing: number | 'indeterminate' = 3000\n  ) {\n    this.direction = direction;\n    this.classToast = classToast;\n    this.styleToast = styleToast;\n    this.timing = timing;\n  }\n}\n\nclass GdaToastConfigForComponent extends GdaToastConfig {\n  public id: string;\n\n  constructor(id: string = '') {\n    super();\n    this.id = id\n  }\n}\n\n@Component({\n  selector: 'gda-toast',\n  template: `\n    <div \n      *ngFor=\"let toast of toasts\" \n      class=\"gda-toast-item\" \n      [ngClass]=\"toast.config.classToast || ''\" \n      [ngStyle]=\"toast.config.styleToast || {}\" \n      @gdaToastAnimation \n      (click)=\"close(toast)\">\n      <div [innerHTML]=\"toast.text\"></div>\n    </div>\n  `,\n  animations: [\n    trigger('gdaToastAnimation', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('0.4s ease-in-out',\n          style({ opacity: 1 })\n        )\n      ]),\n      transition(':leave', [\n        style({ opacity: 1 }),\n        animate('0.4s ease-in-out',\n          style({\n            opacity: 0,\n            height: 0,\n            paddingTop: 0,\n            paddingBottom: 0,\n            marginBottom: 0\n          })\n        )\n      ])\n    ])\n  ]\n})\nexport class GdaToastComponent implements OnInit {\n  @HostBinding('class') get addClass() {\n    return {\n      'gda-toast': true,\n      'gda-toast-top-left': this.directionToast === 'top-left',\n      'gda-toast-top-center': this.directionToast === 'top-center',\n      'gda-toast-top-right': this.directionToast === 'top-right',\n      'gda-toast-bottom-left': this.directionToast === 'bottom-left',\n      'gda-toast-bottom-center': this.directionToast === 'bottom-center',\n      'gda-toast-bottom-right': this.directionToast === 'bottom-right'\n    };\n  };\n  /**\n   * Toasts\n   */\n  @Input() toasts: { text: string, config: GdaToastConfigForComponent }[];\n  /**\n   * Close event\n   */\n  @Output() closeToast: EventEmitter<string>;\n  /**\n   * Direction\n   */\n  private directionToast: 'top-right' | 'top-center' | 'top-left' | 'bottom-right' | 'bottom-center' | 'bottom-left';\n\n  constructor(public elementRef: ElementRef) {\n    this.toasts = [];\n    this.closeToast = new EventEmitter();\n    this.directionToast = 'top-right';\n  }\n\n  ngOnInit(): void {\n    this.directionToast = this.toasts[0].config.direction || 'top-right';\n  }\n\n  public close(toast: { text: string, config: GdaToastConfigForComponent }): void {\n    this.closeToast.emit(toast.config.id);\n  }\n\n}\n","import { ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef, Injectable, Injector } from '@angular/core';\nimport { GdaToastComponent } from './gda-toast.component';\n/* RXJS */\nimport { of, delay } from 'rxjs';\n\nexport class GdaToastConfig {\n  public direction: 'top-right' | 'top-center' | 'top-left' | 'bottom-right' | 'bottom-center' | 'bottom-left';\n  public classToast?: string;\n  public styleToast?: {};\n  public timing?: number | 'indeterminate';\n\n  constructor(\n    direction: 'top-right' | 'top-center' | 'top-left' | 'bottom-right' | 'bottom-center' | 'bottom-left' = 'top-right',\n    classToast: string = '',\n    styleToast: {} = {},\n    timing: number | 'indeterminate' = 3000\n  ) {\n    this.direction = direction;\n    this.classToast = classToast;\n    this.styleToast = styleToast;\n    this.timing = timing;\n  }\n}\n\nclass GdaToastConfigForComponent extends GdaToastConfig {\n  public id: string;\n\n  constructor(id: string = '') {\n    super();\n    this.id = id\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GdaToast {\n  /**\n   * Config default\n   */\n  public toastConfigDefault: GdaToastConfig;\n  /**\n   * Component REFs\n   */\n  private componentRefTopRight: any;\n  private componentRefTopCenter: any;\n  private componentRefTopLeft: any;\n  private componentRefBottomRight: any;\n  private componentRefBottomCenter: any;\n  private componentRefBottomLeft: any;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    this.toastConfigDefault = new GdaToastConfig();\n  }\n\n  private selectedComponentRef(direction: 'top-right' | 'top-center' | 'top-left' | 'bottom-right' | 'bottom-center' | 'bottom-left' = 'top-right') {\n    switch (direction) {\n      case 'top-center':\n        return 'componentRefTopCenter';\n      case 'top-left':\n        return 'componentRefTopLeft';\n      case 'bottom-right':\n        return 'componentRefBottomRight';\n      case 'bottom-center':\n        return 'componentRefBottomCenter';\n      case 'bottom-left':\n        return 'componentRefBottomLeft';\n      case 'top-right':\n      default:\n        return 'componentRefTopRight';\n    }\n  }\n\n  public openToast(text: string, config?: GdaToastConfig): void {\n    if (!document.body.querySelector('.gda-toast-' + (config?.direction || this.toastConfigDefault.direction))) {\n      this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))] = this.componentFactoryResolver\n        .resolveComponentFactory(GdaToastComponent)\n        .create(this.injector);\n\n      this.appRef.attachView(this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].hostView);\n\n      const domElem = (this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].hostView as EmbeddedViewRef<any>)\n        .rootNodes[0] as HTMLElement;\n\n      document.body.appendChild(domElem);\n\n      this.createToast(text, config);\n    } else {\n      this.createToast(text, config);\n    }\n  }\n\n  private createToast(text: string, config?: GdaToastConfig): void {\n    const c: GdaToastConfigForComponent = {\n      id: 'gda-toast-' + (new Date().getTime()),\n      direction: config?.direction || this.toastConfigDefault.direction,\n      classToast: config?.classToast || this.toastConfigDefault.classToast,\n      styleToast: config?.styleToast || this.toastConfigDefault.styleToast,\n      timing: config?.timing || this.toastConfigDefault.timing,\n    }\n    this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts.push({ text: text, config: c });\n    if (c.timing !== 'indeterminate') {\n      of(true).pipe(delay(c.timing || 0)).subscribe(() => {\n        this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts = this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts.filter((toast: { text: string, config: GdaToastConfigForComponent }) => toast.config.id !== c.id);\n        of(true).pipe(delay(500)).subscribe(() => {\n          if (!this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts.length) {\n            this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.closeToast.unsubscribe();\n            this.appRef.detachView(this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].hostView);\n            this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].destroy();\n          }\n        });\n      });\n    } else {\n      this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.closeToast.subscribe((id: string) => {\n        this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts = this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts.filter((toast: { text: string, config: GdaToastConfigForComponent }) => toast.config.id !== id);\n        of(true).pipe(delay(500)).subscribe(() => {\n          if (!this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts.length) {\n            this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.closeToast.unsubscribe();\n            this.appRef.detachView(this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].hostView);\n            this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].destroy();\n          }\n        });\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/* COMPONENT */\nimport { GdaToastComponent } from './gda-toast.component';\n\n@NgModule({\n  declarations: [\n    GdaToastComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class GdaToastModule { }\n","/*\n * Public API Surface of gda-toast\n */\n\nexport * from './gda-toast.service';\nexport * from './gda-toast.component';\nexport * from './gda-toast.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["GdaToastConfig","GdaToastConfigForComponent"],"mappings":"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"}