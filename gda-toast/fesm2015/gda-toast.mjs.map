{"version":3,"file":"gda-toast.mjs","sources":["../../../gda-library-dev/projects/gda-toast/src/gda-toast.component.ts","../../../gda-library-dev/projects/gda-toast/src/gda-toast.service.ts","../../../gda-library-dev/projects/gda-toast/src/gda-toast.module.ts","../../../gda-library-dev/projects/gda-toast/src/public-api.ts","../../../gda-library-dev/projects/gda-toast/src/gda-toast.ts"],"sourcesContent":["import { Component, ElementRef, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nclass GdaToastConfig {\r\n  public direction: 'top-right' | 'top-center' | 'top-left' | 'bottom-right' | 'bottom-center' | 'bottom-left';\r\n  public classToast?: string;\r\n  public styleToast?: {};\r\n  public timing?: number | 'indeterminate';\r\n\r\n  constructor(\r\n    direction: 'top-right' | 'top-center' | 'top-left' | 'bottom-right' | 'bottom-center' | 'bottom-left' = 'top-right',\r\n    classToast: string = '',\r\n    styleToast: {} = {},\r\n    timing: number | 'indeterminate' = 3000\r\n  ) {\r\n    this.direction = direction;\r\n    this.classToast = classToast;\r\n    this.styleToast = styleToast;\r\n    this.timing = timing;\r\n  }\r\n}\r\n\r\nclass GdaToastConfigForComponent extends GdaToastConfig {\r\n  public id: string;\r\n\r\n  constructor(id: string = '') {\r\n    super();\r\n    this.id = id\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'gda-toast',\r\n  template: `\r\n    <div \r\n      *ngFor=\"let toast of toasts\" \r\n      class=\"gda-toast-item\" \r\n      [ngClass]=\"toast.config.classToast || ''\" \r\n      [ngStyle]=\"toast.config.styleToast || {}\" \r\n      @gdaToastAnimation \r\n      (click)=\"close(toast)\">\r\n      <div [innerHTML]=\"toast.text\"></div>\r\n    </div>\r\n  `,\r\n  animations: [\r\n    trigger('gdaToastAnimation', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('0.4s ease-in-out',\r\n          style({ opacity: 1 })\r\n        )\r\n      ]),\r\n      transition(':leave', [\r\n        style({ opacity: 1 }),\r\n        animate('0.4s ease-in-out',\r\n          style({\r\n            opacity: 0,\r\n            height: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            marginBottom: 0\r\n          })\r\n        )\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class GdaToastComponent implements OnInit {\r\n  @HostBinding('class') get addClass() {\r\n    return {\r\n      'gda-toast': true,\r\n      'gda-toast-top-left': this.directionToast === 'top-left',\r\n      'gda-toast-top-center': this.directionToast === 'top-center',\r\n      'gda-toast-top-right': this.directionToast === 'top-right',\r\n      'gda-toast-bottom-left': this.directionToast === 'bottom-left',\r\n      'gda-toast-bottom-center': this.directionToast === 'bottom-center',\r\n      'gda-toast-bottom-right': this.directionToast === 'bottom-right'\r\n    };\r\n  };\r\n  /**\r\n   * Toasts\r\n   */\r\n  @Input() toasts: { text: string, config: GdaToastConfigForComponent }[];\r\n  /**\r\n   * Close event\r\n   */\r\n  @Output() closeToast: EventEmitter<string>;\r\n  /**\r\n   * Direction\r\n   */\r\n  private directionToast: 'top-right' | 'top-center' | 'top-left' | 'bottom-right' | 'bottom-center' | 'bottom-left';\r\n\r\n  constructor(public elementRef: ElementRef) {\r\n    this.toasts = [];\r\n    this.closeToast = new EventEmitter();\r\n    this.directionToast = 'top-right';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.directionToast = this.toasts[0].config.direction || 'top-right';\r\n  }\r\n\r\n  protected close(toast: { text: string, config: GdaToastConfigForComponent }): void {\r\n    this.closeToast.emit(toast.config.id);\r\n  }\r\n\r\n}\r\n","import { ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef, Injectable, Injector } from '@angular/core';\r\nimport { GdaToastComponent } from './gda-toast.component';\r\n/* RXJS */\r\nimport { of, delay } from 'rxjs';\r\n\r\nexport class GdaToastConfig {\r\n  public direction: 'top-right' | 'top-center' | 'top-left' | 'bottom-right' | 'bottom-center' | 'bottom-left';\r\n  public classToast?: string;\r\n  public styleToast?: {};\r\n  public timing?: number | 'indeterminate';\r\n\r\n  constructor(\r\n    direction: 'top-right' | 'top-center' | 'top-left' | 'bottom-right' | 'bottom-center' | 'bottom-left' = 'top-right',\r\n    classToast: string = '',\r\n    styleToast: {} = {},\r\n    timing: number | 'indeterminate' = 3000\r\n  ) {\r\n    this.direction = direction;\r\n    this.classToast = classToast;\r\n    this.styleToast = styleToast;\r\n    this.timing = timing;\r\n  }\r\n}\r\n\r\nclass GdaToastConfigForComponent extends GdaToastConfig {\r\n  public id: string;\r\n\r\n  constructor(id: string = '') {\r\n    super();\r\n    this.id = id\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GdaToast {\r\n  /**\r\n   * Config default\r\n   */\r\n  public toastConfigDefault: GdaToastConfig;\r\n  /**\r\n   * Component REFs\r\n   */\r\n  private componentRefTopRight: any;\r\n  private componentRefTopCenter: any;\r\n  private componentRefTopLeft: any;\r\n  private componentRefBottomRight: any;\r\n  private componentRefBottomCenter: any;\r\n  private componentRefBottomLeft: any;\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private appRef: ApplicationRef,\r\n    private injector: Injector\r\n  ) {\r\n    this.toastConfigDefault = new GdaToastConfig();\r\n  }\r\n\r\n  private selectedComponentRef(direction: 'top-right' | 'top-center' | 'top-left' | 'bottom-right' | 'bottom-center' | 'bottom-left' = 'top-right') {\r\n    switch (direction) {\r\n      case 'top-center':\r\n        return 'componentRefTopCenter';\r\n      case 'top-left':\r\n        return 'componentRefTopLeft';\r\n      case 'bottom-right':\r\n        return 'componentRefBottomRight';\r\n      case 'bottom-center':\r\n        return 'componentRefBottomCenter';\r\n      case 'bottom-left':\r\n        return 'componentRefBottomLeft';\r\n      case 'top-right':\r\n      default:\r\n        return 'componentRefTopRight';\r\n    }\r\n  }\r\n\r\n  public openToast(text: string, config?: GdaToastConfig): void {\r\n    if (!document.body.querySelector('.gda-toast-' + (config?.direction || this.toastConfigDefault.direction))) {\r\n      this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))] = this.componentFactoryResolver\r\n        .resolveComponentFactory(GdaToastComponent)\r\n        .create(this.injector);\r\n\r\n      this.appRef.attachView(this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].hostView);\r\n\r\n      const domElem = (this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].hostView as EmbeddedViewRef<any>)\r\n        .rootNodes[0] as HTMLElement;\r\n\r\n      document.body.appendChild(domElem);\r\n\r\n      this.createToast(text, config);\r\n    } else {\r\n      this.createToast(text, config);\r\n    }\r\n  }\r\n\r\n  private createToast(text: string, config?: GdaToastConfig): void {\r\n    const c: GdaToastConfigForComponent = {\r\n      id: 'gda-toast-' + (new Date().getTime()),\r\n      direction: config?.direction || this.toastConfigDefault.direction,\r\n      classToast: config?.classToast || this.toastConfigDefault.classToast,\r\n      styleToast: config?.styleToast || this.toastConfigDefault.styleToast,\r\n      timing: config?.timing || this.toastConfigDefault.timing,\r\n    }\r\n    this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts.push({ text: text, config: c });\r\n    if (c.timing !== 'indeterminate') {\r\n      of(true).pipe(delay(c.timing || 0)).subscribe(() => {\r\n        this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts = this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts.filter((toast: { text: string, config: GdaToastConfigForComponent }) => toast.config.id !== c.id);\r\n        of(true).pipe(delay(500)).subscribe(() => {\r\n          if (!this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts.length) {\r\n            this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.closeToast.unsubscribe();\r\n            this.appRef.detachView(this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].hostView);\r\n            this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].destroy();\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.closeToast.subscribe((id: string) => {\r\n        this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts = this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts.filter((toast: { text: string, config: GdaToastConfigForComponent }) => toast.config.id !== id);\r\n        of(true).pipe(delay(500)).subscribe(() => {\r\n          if (!this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.toasts.length) {\r\n            this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].instance.closeToast.unsubscribe();\r\n            this.appRef.detachView(this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].hostView);\r\n            this[this.selectedComponentRef((config?.direction || this.toastConfigDefault.direction))].destroy();\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n/* COMPONENT */\r\nimport { GdaToastComponent } from './gda-toast.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GdaToastComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class GdaToastModule { }\r\n","/*\r\n * Public API Surface of gda-toast\r\n */\r\n\r\nexport * from './gda-toast.service';\r\nexport * from './gda-toast.component';\r\nexport * from './gda-toast.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["GdaToastConfig","GdaToastConfigForComponent"],"mappings":"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"}